---
layout: post
title: JS Date 초 간략 정리(+추가 Date 속성을 이용한 코드 러닝타임 계산 비교)
date: 2023-01-17 18:56:40 +0900
category: JS
---

# Date 간략 정리

## Date

### **간략설명**

- 표준 Built-in 객체로써 날짜와 시간을 위한 속성값과 메서드를 제공하는 객체
- Date 객체는 1970년 1월 1일 UTC(협정 세계시) 자정과의 시간 차이를 밀리초로 나타내는 정수 값으로 표현

### **대표 속성 및 메서드**

- Date 객체 생성자: new Date()
- 현재 시간 기준 문자열: Date()
- 날짜 정보 얻기 (년/월/일): Date.getFullYear(), Date.getMonth(), Date.getDate()
- 날짜 정보 얻기 (시/분/초/ms): Date.getHours(), Date.getMinutes(), Date.getSeconds()
- 날짜 정보 설정 (년/월/일): Date.setFullYear(), Date.setMonth(), Date.setDate()
- 날짜 정보 설정 (시/분/초/ms): Date.setHours(), Date.setMinutes(), Date.setSeconds()
- 그 외 날짜 정보 얻기: Date.getDay(), Date.getTime(), Date.getTimezoneOffset()
- 그 외 날짜 정보 설정: Date.parse(string)

### **추가: 코드시간 계산 비교**

날짜 그대로 계산했을 때와 날짜를 getTime메서드를 사용하여 초로 환산해서 계산했을 때를 비교하는 예제

```js
function dateSub(old_date, new_date) {
  return new_date - old_date;
}

function getTimeSub(old_date, new_date) {
  return new_date.getTime() - old_date.getTime();
}

function benchMark(callback_func) {
  let date_1 = new Date("2020-01-01");
  let date_2 = new Date();

  let start = Date.now();
  for (let i = 0; i < 100000; i++) {
    callback_func(date_1, date_2);
  }
  return Date.now() - start;
}

console.log("dateSub: " + benchMark(dateSub) + "ms"); // 17ms
console.log("getTimeSub: " + benchMark(getTimeSub) + "ms"); // 3ms
```
예제 결과 거의 **평균 시간 차이가 5배**정도 난다

> ※ 결과는 컴퓨터 사양에 따라 다르게 나올 수 있다.